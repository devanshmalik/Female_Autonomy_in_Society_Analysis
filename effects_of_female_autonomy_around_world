{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "> **Tip**: Welcome to the Investigate a Dataset project! You will find tips in quoted sections like this to help organize your approach to your investigation. Before submitting your project, it will be a good idea to go back through your report and remove these sections to make the presentation of your work as tidy as possible. First things first, you might want to double-click this Markdown cell and change the title so that it reflects your dataset and investigation.\n",
    "\n",
    "# Project: Investigate a Dataset (Replace this with something more specific!)\n",
    "\n",
    "## Table of Contents\n",
    "<ul>\n",
    "<li><a href=\"#intro\">Introduction</a></li>\n",
    "<li><a href=\"#questions\">Research Questions</a></li>\n",
    "<li><a href=\"#wrangling\">Data Wrangling</a></li>\n",
    "<li><a href=\"#eda\">Exploratory Data Analysis</a></li>\n",
    "<li><a href=\"#conclusions\">Conclusions</a></li>\n",
    "</ul>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<a id='intro'></a>\n",
    "## Introduction\n",
    "\n",
    "> **Tip**: In this section of the report, provide a brief introduction to the dataset you've selected for analysis. At the end of this section, describe the questions that you plan on exploring over the course of the report. Try to build your report around the analysis of at least one dependent variable and three independent variables.\n",
    ">\n",
    "> If you haven't yet selected and downloaded your data, make sure you do that first before coming back here. If you're not sure what questions to ask right now, then make sure you familiarize yourself with the variables and the dataset context for ideas of what to explore."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Dataset\n",
    "**Source**: [Gapminder](https://www.gapminder.org/data/) has collected a lot of information about how people live their lives in different countries, tracked across the years, and on a number of different indicators. From their list of 500+ indicators, the following indicators related to women literacy and engagement in society peeked my interest:\n",
    "\n",
    "1. Literacy rate, adult female (% of females ages 15 and above)\n",
    "    * Adult literacy rate is the percentage of people ages 15 and above who can, with understanding, read and write a short, simple statement on their everyday life\n",
    "2. Mean years in school (women of reproductive age, 15 to 44)\n",
    "    * The average number of years of school attended by all people in the age and gender group specified, including primary, secondary and tertiary education. \n",
    "3. Mean age at 1st marriage of women\n",
    "    * The average age, in years, of first marriage for women. Women who never married are excluded. Cohabitation is excluded\n",
    "4. Age 15-64 Female Labor to population (%)\n",
    "    * For age group 15-64, percentage of female labor to total female population.\n",
    "5. Under-Five Mortality rate (per 1,000 live births)\n",
    "    * The probability that children born in a specific year will die before reaching the age of five, if the age-specific mortality rates remain the same."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Background\n",
    "Since Gapminder has data on more than 500 indicators ranging in economy, population, health, etc. it is crucial to have a topic of interest prior to choosing indicators. \n",
    "\n",
    "I was interested in looking at factors related to females, specifically indicators related to women literacy, autonomy and engagement in society. \n",
    "\n",
    "### Factors\n",
    "The main independent factors explored are adult female literacy rate and mean years in school. The effect of women literacy on mean age at first marriage is explored along with the cumulative effect of all these factors on female labor participation in the economy. \n",
    "\n",
    "The final factor explored in Child Mortality Rate and whether women's rights and autonomy are correlated to the mortality rate in a society."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<a id='questions'></a>\n",
    "## Research Questions \n",
    "The aim of this analysis was to research the following questions:\n",
    "1. Have certain regions of the world been growing in selected metrics better than others?\n",
    "2. Does female literacy in a country have an impact on the mean age of females at first marriage? \n",
    "3. What factors affect the female labor participation in society, specifically, to what extent does female literacy (indicators 1 and 2) and autonomy (indicator 3) impact female engagement in labor force? \n",
    "4. Do factors related to female literacy and autonomy in a society have an effect on the child mortality rate in a country? "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<a id='wrangling'></a>\n",
    "# Data Wrangling\n",
    "\n",
    "> **Tip**: In this section of the report, you will load in the data, check for cleanliness, and then trim and clean your dataset for analysis. Make sure that you document your steps carefully and justify your cleaning decisions.\n",
    "\n",
    "Since the data source for each indicator is different, the countries and years measured vary for each dataset. In order to perform comparative analysis between indicators, substantial data wrangling is required to match countries studied for each indicator and the years measured. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## General Properties \n",
    "General exploration of structure of each dataset to determine required steps for cleanup "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "% matplotlib inline"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 1. Mean School Years "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 175 entries, 0 to 174\n",
      "Data columns (total 41 columns):\n",
      "Row Labels    175 non-null object\n",
      "1970          175 non-null float64\n",
      "1971          175 non-null float64\n",
      "1972          175 non-null float64\n",
      "1973          175 non-null float64\n",
      "1974          175 non-null float64\n",
      "1975          175 non-null float64\n",
      "1976          175 non-null float64\n",
      "1977          175 non-null float64\n",
      "1978          175 non-null float64\n",
      "1979          175 non-null float64\n",
      "1980          175 non-null float64\n",
      "1981          175 non-null float64\n",
      "1982          175 non-null float64\n",
      "1983          175 non-null float64\n",
      "1984          175 non-null float64\n",
      "1985          175 non-null float64\n",
      "1986          175 non-null float64\n",
      "1987          175 non-null float64\n",
      "1988          175 non-null float64\n",
      "1989          175 non-null float64\n",
      "1990          175 non-null float64\n",
      "1991          175 non-null float64\n",
      "1992          175 non-null float64\n",
      "1993          175 non-null float64\n",
      "1994          175 non-null float64\n",
      "1995          175 non-null float64\n",
      "1996          175 non-null float64\n",
      "1997          175 non-null float64\n",
      "1998          175 non-null float64\n",
      "1999          175 non-null float64\n",
      "2000          175 non-null float64\n",
      "2001          175 non-null float64\n",
      "2002          175 non-null float64\n",
      "2003          175 non-null float64\n",
      "2004          175 non-null float64\n",
      "2005          175 non-null float64\n",
      "2006          175 non-null float64\n",
      "2007          175 non-null float64\n",
      "2008          175 non-null float64\n",
      "2009          175 non-null float64\n",
      "dtypes: float64(40), object(1)\n",
      "memory usage: 56.1+ KB\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Row Labels</th>\n",
       "      <th>1970</th>\n",
       "      <th>1971</th>\n",
       "      <th>1972</th>\n",
       "      <th>1973</th>\n",
       "      <th>1974</th>\n",
       "      <th>1975</th>\n",
       "      <th>1976</th>\n",
       "      <th>1977</th>\n",
       "      <th>1978</th>\n",
       "      <th>...</th>\n",
       "      <th>2000</th>\n",
       "      <th>2001</th>\n",
       "      <th>2002</th>\n",
       "      <th>2003</th>\n",
       "      <th>2004</th>\n",
       "      <th>2005</th>\n",
       "      <th>2006</th>\n",
       "      <th>2007</th>\n",
       "      <th>2008</th>\n",
       "      <th>2009</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>0.1</td>\n",
       "      <td>0.1</td>\n",
       "      <td>0.1</td>\n",
       "      <td>0.1</td>\n",
       "      <td>0.1</td>\n",
       "      <td>0.1</td>\n",
       "      <td>0.1</td>\n",
       "      <td>0.1</td>\n",
       "      <td>0.2</td>\n",
       "      <td>...</td>\n",
       "      <td>0.5</td>\n",
       "      <td>0.5</td>\n",
       "      <td>0.5</td>\n",
       "      <td>0.6</td>\n",
       "      <td>0.6</td>\n",
       "      <td>0.6</td>\n",
       "      <td>0.7</td>\n",
       "      <td>0.7</td>\n",
       "      <td>0.7</td>\n",
       "      <td>0.8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Albania</td>\n",
       "      <td>5.6</td>\n",
       "      <td>5.7</td>\n",
       "      <td>5.9</td>\n",
       "      <td>6.0</td>\n",
       "      <td>6.2</td>\n",
       "      <td>6.3</td>\n",
       "      <td>6.5</td>\n",
       "      <td>6.6</td>\n",
       "      <td>6.8</td>\n",
       "      <td>...</td>\n",
       "      <td>9.8</td>\n",
       "      <td>9.9</td>\n",
       "      <td>10.0</td>\n",
       "      <td>10.1</td>\n",
       "      <td>10.2</td>\n",
       "      <td>10.3</td>\n",
       "      <td>10.4</td>\n",
       "      <td>10.5</td>\n",
       "      <td>10.6</td>\n",
       "      <td>10.7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Algeria</td>\n",
       "      <td>1.4</td>\n",
       "      <td>1.5</td>\n",
       "      <td>1.6</td>\n",
       "      <td>1.7</td>\n",
       "      <td>1.8</td>\n",
       "      <td>1.9</td>\n",
       "      <td>2.1</td>\n",
       "      <td>2.2</td>\n",
       "      <td>2.3</td>\n",
       "      <td>...</td>\n",
       "      <td>5.8</td>\n",
       "      <td>5.9</td>\n",
       "      <td>6.1</td>\n",
       "      <td>6.2</td>\n",
       "      <td>6.4</td>\n",
       "      <td>6.5</td>\n",
       "      <td>6.7</td>\n",
       "      <td>6.8</td>\n",
       "      <td>6.9</td>\n",
       "      <td>7.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Angola</td>\n",
       "      <td>0.9</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.1</td>\n",
       "      <td>1.1</td>\n",
       "      <td>1.2</td>\n",
       "      <td>1.2</td>\n",
       "      <td>1.3</td>\n",
       "      <td>1.4</td>\n",
       "      <td>...</td>\n",
       "      <td>3.5</td>\n",
       "      <td>3.6</td>\n",
       "      <td>3.7</td>\n",
       "      <td>3.8</td>\n",
       "      <td>3.9</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.1</td>\n",
       "      <td>4.3</td>\n",
       "      <td>4.4</td>\n",
       "      <td>4.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Antigua and Barbuda</td>\n",
       "      <td>8.1</td>\n",
       "      <td>8.3</td>\n",
       "      <td>8.5</td>\n",
       "      <td>8.7</td>\n",
       "      <td>8.8</td>\n",
       "      <td>9.0</td>\n",
       "      <td>9.2</td>\n",
       "      <td>9.4</td>\n",
       "      <td>9.6</td>\n",
       "      <td>...</td>\n",
       "      <td>12.7</td>\n",
       "      <td>12.8</td>\n",
       "      <td>12.9</td>\n",
       "      <td>13.0</td>\n",
       "      <td>13.1</td>\n",
       "      <td>13.2</td>\n",
       "      <td>13.3</td>\n",
       "      <td>13.3</td>\n",
       "      <td>13.4</td>\n",
       "      <td>13.5</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 41 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            Row Labels  1970  1971  1972  1973  1974  1975  1976  1977  1978  \\\n",
       "0          Afghanistan   0.1   0.1   0.1   0.1   0.1   0.1   0.1   0.1   0.2   \n",
       "1              Albania   5.6   5.7   5.9   6.0   6.2   6.3   6.5   6.6   6.8   \n",
       "2              Algeria   1.4   1.5   1.6   1.7   1.8   1.9   2.1   2.2   2.3   \n",
       "3               Angola   0.9   1.0   1.0   1.1   1.1   1.2   1.2   1.3   1.4   \n",
       "4  Antigua and Barbuda   8.1   8.3   8.5   8.7   8.8   9.0   9.2   9.4   9.6   \n",
       "\n",
       "   ...   2000  2001  2002  2003  2004  2005  2006  2007  2008  2009  \n",
       "0  ...    0.5   0.5   0.5   0.6   0.6   0.6   0.7   0.7   0.7   0.8  \n",
       "1  ...    9.8   9.9  10.0  10.1  10.2  10.3  10.4  10.5  10.6  10.7  \n",
       "2  ...    5.8   5.9   6.1   6.2   6.4   6.5   6.7   6.8   6.9   7.1  \n",
       "3  ...    3.5   3.6   3.7   3.8   3.9   4.0   4.1   4.3   4.4   4.5  \n",
       "4  ...   12.7  12.8  12.9  13.0  13.1  13.2  13.3  13.3  13.4  13.5  \n",
       "\n",
       "[5 rows x 41 columns]"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_school = pd.read_csv('data/mean_years_school_women.csv')\n",
    "df_school.info()\n",
    "df_school.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Observations:**\n",
    "* Data present for 175 countries for years 1970 - 2009 \n",
    "* All years contain 175 non-null entries with no missing data for any country for any year\n",
    "\n",
    "**Next Steps:**\n",
    "* Extract revelant years data for analysis (determined later)  "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 2. Mean Age at Marriage "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 185 entries, 0 to 184\n",
      "Columns: 117 entries, Unnamed: 0 to 2005\n",
      "dtypes: float64(116), object(1)\n",
      "memory usage: 169.2+ KB\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "Unnamed: 0    185\n",
       "1616            1\n",
       "1666            1\n",
       "1685            1\n",
       "1710            2\n",
       "1716            1\n",
       "1735            1\n",
       "1760            1\n",
       "1766            1\n",
       "1775            3\n",
       "1780            5\n",
       "1785            1\n",
       "1791            1\n",
       "1800            5\n",
       "1810            1\n",
       "1815            4\n",
       "1825            1\n",
       "1835            1\n",
       "1840            2\n",
       "1845            1\n",
       "1855            1\n",
       "1860            2\n",
       "1865            1\n",
       "1866            1\n",
       "1870            2\n",
       "1875            1\n",
       "1879            1\n",
       "1880            2\n",
       "1885            1\n",
       "1887            1\n",
       "             ... \n",
       "1976           10\n",
       "1977            8\n",
       "1978            3\n",
       "1979           10\n",
       "1980           19\n",
       "1981            3\n",
       "1982            5\n",
       "1983            1\n",
       "1984            6\n",
       "1985            3\n",
       "1986            2\n",
       "1987            3\n",
       "1988            1\n",
       "1989           11\n",
       "1990           10\n",
       "1991            6\n",
       "1992            2\n",
       "1993            1\n",
       "1994            3\n",
       "1995            1\n",
       "1996            4\n",
       "1997            2\n",
       "1998            2\n",
       "1999            2\n",
       "2000            2\n",
       "2001            2\n",
       "2002            1\n",
       "2003            2\n",
       "2004            1\n",
       "2005          175\n",
       "Length: 117, dtype: int64"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_marriage = pd.read_csv('data/marriage_age_females.csv')\n",
    "df_marriage.info()\n",
    "df_marriage.head()\n",
    "df_marriage.count()\n",
    "# Marriage Age Females\n",
    "# Horrible data, no complete years. only 2005 has full data"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Observations:**\n",
    "* Data present for 185 countries for years starting at year 1616 to 2005\n",
    "* No year contains data for all 185 countries with year 2005 containing highest number of non-null entries (175)\n",
    "\n",
    "**Next Steps:**\n",
    "* Due to extreme amount of missing data for most years, all data except for year 2005 will be dropped. \n",
    "* Final dataset will contain mean age of first marriage for year 2005 for 175 countries "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 3. Female Labor Participation"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 189 entries, 0 to 188\n",
      "Data columns (total 29 columns):\n",
      "Female 15-64 labour to population (%)    189 non-null object\n",
      "1980                                     189 non-null float64\n",
      "1981                                     189 non-null float64\n",
      "1982                                     189 non-null float64\n",
      "1983                                     189 non-null float64\n",
      "1984                                     189 non-null float64\n",
      "1985                                     189 non-null float64\n",
      "1986                                     189 non-null float64\n",
      "1987                                     189 non-null float64\n",
      "1988                                     189 non-null float64\n",
      "1989                                     189 non-null float64\n",
      "1990                                     189 non-null float64\n",
      "1991                                     189 non-null float64\n",
      "1992                                     189 non-null float64\n",
      "1993                                     189 non-null float64\n",
      "1994                                     189 non-null float64\n",
      "1995                                     189 non-null float64\n",
      "1996                                     189 non-null float64\n",
      "1997                                     189 non-null float64\n",
      "1998                                     189 non-null float64\n",
      "1999                                     189 non-null float64\n",
      "2000                                     189 non-null float64\n",
      "2001                                     189 non-null float64\n",
      "2002                                     189 non-null float64\n",
      "2003                                     189 non-null float64\n",
      "2004                                     189 non-null float64\n",
      "2005                                     189 non-null float64\n",
      "2006                                     189 non-null float64\n",
      "2007                                     189 non-null float64\n",
      "dtypes: float64(28), object(1)\n",
      "memory usage: 42.9+ KB\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Female 15-64 labour to population (%)</th>\n",
       "      <th>1980</th>\n",
       "      <th>1981</th>\n",
       "      <th>1982</th>\n",
       "      <th>1983</th>\n",
       "      <th>1984</th>\n",
       "      <th>1985</th>\n",
       "      <th>1986</th>\n",
       "      <th>1987</th>\n",
       "      <th>1988</th>\n",
       "      <th>...</th>\n",
       "      <th>1998</th>\n",
       "      <th>1999</th>\n",
       "      <th>2000</th>\n",
       "      <th>2001</th>\n",
       "      <th>2002</th>\n",
       "      <th>2003</th>\n",
       "      <th>2004</th>\n",
       "      <th>2005</th>\n",
       "      <th>2006</th>\n",
       "      <th>2007</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>31.100000</td>\n",
       "      <td>30.900000</td>\n",
       "      <td>30.700001</td>\n",
       "      <td>30.500000</td>\n",
       "      <td>30.400000</td>\n",
       "      <td>30.200001</td>\n",
       "      <td>30.000000</td>\n",
       "      <td>29.900000</td>\n",
       "      <td>29.799999</td>\n",
       "      <td>...</td>\n",
       "      <td>28.000000</td>\n",
       "      <td>28.000000</td>\n",
       "      <td>28.000000</td>\n",
       "      <td>28.200001</td>\n",
       "      <td>28.400000</td>\n",
       "      <td>28.600000</td>\n",
       "      <td>28.900000</td>\n",
       "      <td>29.200001</td>\n",
       "      <td>29.600000</td>\n",
       "      <td>29.500000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Albania</td>\n",
       "      <td>73.699997</td>\n",
       "      <td>73.099998</td>\n",
       "      <td>72.800003</td>\n",
       "      <td>72.199997</td>\n",
       "      <td>71.699997</td>\n",
       "      <td>71.800003</td>\n",
       "      <td>71.400002</td>\n",
       "      <td>72.199997</td>\n",
       "      <td>73.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>55.400002</td>\n",
       "      <td>55.599998</td>\n",
       "      <td>55.700001</td>\n",
       "      <td>55.700001</td>\n",
       "      <td>55.700001</td>\n",
       "      <td>55.700001</td>\n",
       "      <td>55.700001</td>\n",
       "      <td>55.599998</td>\n",
       "      <td>55.599998</td>\n",
       "      <td>56.099998</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Algeria</td>\n",
       "      <td>19.799999</td>\n",
       "      <td>19.900000</td>\n",
       "      <td>20.100000</td>\n",
       "      <td>20.100000</td>\n",
       "      <td>20.299999</td>\n",
       "      <td>20.400000</td>\n",
       "      <td>21.000000</td>\n",
       "      <td>21.700001</td>\n",
       "      <td>22.400000</td>\n",
       "      <td>...</td>\n",
       "      <td>30.400000</td>\n",
       "      <td>31.299999</td>\n",
       "      <td>32.099998</td>\n",
       "      <td>33.000000</td>\n",
       "      <td>33.799999</td>\n",
       "      <td>34.700001</td>\n",
       "      <td>35.500000</td>\n",
       "      <td>36.200001</td>\n",
       "      <td>36.900002</td>\n",
       "      <td>38.099998</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Angola</td>\n",
       "      <td>74.300003</td>\n",
       "      <td>74.300003</td>\n",
       "      <td>74.500000</td>\n",
       "      <td>74.599998</td>\n",
       "      <td>74.800003</td>\n",
       "      <td>74.900002</td>\n",
       "      <td>75.000000</td>\n",
       "      <td>75.199997</td>\n",
       "      <td>76.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>74.699997</td>\n",
       "      <td>75.099998</td>\n",
       "      <td>74.699997</td>\n",
       "      <td>74.599998</td>\n",
       "      <td>75.000000</td>\n",
       "      <td>74.900002</td>\n",
       "      <td>75.199997</td>\n",
       "      <td>75.500000</td>\n",
       "      <td>76.199997</td>\n",
       "      <td>76.400002</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Argentina</td>\n",
       "      <td>32.799999</td>\n",
       "      <td>32.099998</td>\n",
       "      <td>31.600000</td>\n",
       "      <td>31.299999</td>\n",
       "      <td>31.600000</td>\n",
       "      <td>32.099998</td>\n",
       "      <td>32.200001</td>\n",
       "      <td>32.400002</td>\n",
       "      <td>32.900002</td>\n",
       "      <td>...</td>\n",
       "      <td>49.900002</td>\n",
       "      <td>50.799999</td>\n",
       "      <td>51.700001</td>\n",
       "      <td>52.599998</td>\n",
       "      <td>53.500000</td>\n",
       "      <td>54.400002</td>\n",
       "      <td>55.299999</td>\n",
       "      <td>56.200001</td>\n",
       "      <td>57.099998</td>\n",
       "      <td>57.099998</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 29 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "  Female 15-64 labour to population (%)       1980       1981       1982  \\\n",
       "0                           Afghanistan  31.100000  30.900000  30.700001   \n",
       "1                               Albania  73.699997  73.099998  72.800003   \n",
       "2                               Algeria  19.799999  19.900000  20.100000   \n",
       "3                                Angola  74.300003  74.300003  74.500000   \n",
       "4                             Argentina  32.799999  32.099998  31.600000   \n",
       "\n",
       "        1983       1984       1985       1986       1987       1988  \\\n",
       "0  30.500000  30.400000  30.200001  30.000000  29.900000  29.799999   \n",
       "1  72.199997  71.699997  71.800003  71.400002  72.199997  73.000000   \n",
       "2  20.100000  20.299999  20.400000  21.000000  21.700001  22.400000   \n",
       "3  74.599998  74.800003  74.900002  75.000000  75.199997  76.000000   \n",
       "4  31.299999  31.600000  32.099998  32.200001  32.400002  32.900002   \n",
       "\n",
       "     ...           1998       1999       2000       2001       2002  \\\n",
       "0    ...      28.000000  28.000000  28.000000  28.200001  28.400000   \n",
       "1    ...      55.400002  55.599998  55.700001  55.700001  55.700001   \n",
       "2    ...      30.400000  31.299999  32.099998  33.000000  33.799999   \n",
       "3    ...      74.699997  75.099998  74.699997  74.599998  75.000000   \n",
       "4    ...      49.900002  50.799999  51.700001  52.599998  53.500000   \n",
       "\n",
       "        2003       2004       2005       2006       2007  \n",
       "0  28.600000  28.900000  29.200001  29.600000  29.500000  \n",
       "1  55.700001  55.700001  55.599998  55.599998  56.099998  \n",
       "2  34.700001  35.500000  36.200001  36.900002  38.099998  \n",
       "3  74.900002  75.199997  75.500000  76.199997  76.400002  \n",
       "4  54.400002  55.299999  56.200001  57.099998  57.099998  \n",
       "\n",
       "[5 rows x 29 columns]"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_labor = pd.read_csv('data/female_labour_participation_rate.csv')\n",
    "df_labor.info()\n",
    "df_labor.head()\n",
    "# Clean data with no missing values"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Observations:**\n",
    "* Data present for 189 countries for years 1980 - 2007 \n",
    "* All years contain 175 non-null entries with no missing data for any country for any year\n",
    "\n",
    "**Next Steps:**\n",
    "* Extract revelant years data for analysis (determined later)  "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 4. Child Mortality Rates"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 260 entries, 0 to 259\n",
      "Data columns (total 82 columns):\n",
      "CME under 5 mortality    260 non-null object\n",
      "1931                     1 non-null float64\n",
      "1932                     1 non-null float64\n",
      "1933                     1 non-null float64\n",
      "1934                     1 non-null float64\n",
      "1935                     1 non-null float64\n",
      "1936                     3 non-null float64\n",
      "1937                     3 non-null float64\n",
      "1938                     3 non-null float64\n",
      "1939                     4 non-null float64\n",
      "1940                     4 non-null float64\n",
      "1941                     4 non-null float64\n",
      "1942                     5 non-null float64\n",
      "1943                     7 non-null float64\n",
      "1944                     9 non-null float64\n",
      "1945                     12 non-null float64\n",
      "1946                     15 non-null float64\n",
      "1947                     16 non-null float64\n",
      "1948                     29 non-null float64\n",
      "1949                     39 non-null float64\n",
      "1950                     45 non-null float64\n",
      "1951                     49 non-null float64\n",
      "1952                     53 non-null float64\n",
      "1953                     65 non-null float64\n",
      "1954                     76 non-null float64\n",
      "1955                     85 non-null float64\n",
      "1956                     89 non-null float64\n",
      "1957                     93 non-null float64\n",
      "1958                     98 non-null float64\n",
      "1959                     103 non-null float64\n",
      "1960                     108 non-null float64\n",
      "1961                     111 non-null float64\n",
      "1962                     116 non-null float64\n",
      "1963                     118 non-null float64\n",
      "1964                     121 non-null float64\n",
      "1965                     124 non-null float64\n",
      "1966                     127 non-null float64\n",
      "1967                     130 non-null float64\n",
      "1968                     138 non-null float64\n",
      "1969                     142 non-null float64\n",
      "1970                     147 non-null float64\n",
      "1971                     150 non-null float64\n",
      "1972                     150 non-null float64\n",
      "1973                     151 non-null float64\n",
      "1974                     154 non-null float64\n",
      "1975                     156 non-null float64\n",
      "1976                     157 non-null float64\n",
      "1977                     160 non-null float64\n",
      "1978                     163 non-null float64\n",
      "1979                     166 non-null float64\n",
      "1980                     177 non-null float64\n",
      "1981                     178 non-null float64\n",
      "1982                     180 non-null float64\n",
      "1983                     186 non-null float64\n",
      "1984                     186 non-null float64\n",
      "1985                     189 non-null float64\n",
      "1986                     189 non-null float64\n",
      "1987                     190 non-null float64\n",
      "1988                     191 non-null float64\n",
      "1989                     191 non-null float64\n",
      "1990                     195 non-null float64\n",
      "1991                     195 non-null float64\n",
      "1992                     195 non-null float64\n",
      "1993                     195 non-null float64\n",
      "1994                     195 non-null float64\n",
      "1995                     195 non-null float64\n",
      "1996                     195 non-null float64\n",
      "1997                     195 non-null float64\n",
      "1998                     195 non-null float64\n",
      "1999                     195 non-null float64\n",
      "2000                     195 non-null float64\n",
      "2001                     195 non-null float64\n",
      "2002                     195 non-null float64\n",
      "2003                     195 non-null float64\n",
      "2004                     195 non-null float64\n",
      "2005                     195 non-null float64\n",
      "2006                     195 non-null float64\n",
      "2007                     195 non-null float64\n",
      "2008                     195 non-null float64\n",
      "2009                     195 non-null float64\n",
      "2010                     195 non-null float64\n",
      "2011                     195 non-null float64\n",
      "dtypes: float64(81), object(1)\n",
      "memory usage: 166.6+ KB\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>CME under 5 mortality</th>\n",
       "      <th>1931</th>\n",
       "      <th>1932</th>\n",
       "      <th>1933</th>\n",
       "      <th>1934</th>\n",
       "      <th>1935</th>\n",
       "      <th>1936</th>\n",
       "      <th>1937</th>\n",
       "      <th>1938</th>\n",
       "      <th>1939</th>\n",
       "      <th>...</th>\n",
       "      <th>2002</th>\n",
       "      <th>2003</th>\n",
       "      <th>2004</th>\n",
       "      <th>2005</th>\n",
       "      <th>2006</th>\n",
       "      <th>2007</th>\n",
       "      <th>2008</th>\n",
       "      <th>2009</th>\n",
       "      <th>2010</th>\n",
       "      <th>2011</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>129.2</td>\n",
       "      <td>125.9</td>\n",
       "      <td>122.7</td>\n",
       "      <td>119.4</td>\n",
       "      <td>116.3</td>\n",
       "      <td>113.4</td>\n",
       "      <td>109.7</td>\n",
       "      <td>106.7</td>\n",
       "      <td>103.9</td>\n",
       "      <td>101.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Albania</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>23.5</td>\n",
       "      <td>22.2</td>\n",
       "      <td>21.0</td>\n",
       "      <td>19.7</td>\n",
       "      <td>18.7</td>\n",
       "      <td>17.8</td>\n",
       "      <td>16.9</td>\n",
       "      <td>15.8</td>\n",
       "      <td>15.0</td>\n",
       "      <td>14.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Algeria</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>42.3</td>\n",
       "      <td>40.7</td>\n",
       "      <td>39.0</td>\n",
       "      <td>37.7</td>\n",
       "      <td>36.4</td>\n",
       "      <td>34.9</td>\n",
       "      <td>33.5</td>\n",
       "      <td>32.1</td>\n",
       "      <td>31.3</td>\n",
       "      <td>29.8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Andorra</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>4.6</td>\n",
       "      <td>4.4</td>\n",
       "      <td>4.3</td>\n",
       "      <td>4.1</td>\n",
       "      <td>4.0</td>\n",
       "      <td>3.9</td>\n",
       "      <td>3.7</td>\n",
       "      <td>3.6</td>\n",
       "      <td>3.5</td>\n",
       "      <td>3.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Angola</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>191.2</td>\n",
       "      <td>187.1</td>\n",
       "      <td>183.3</td>\n",
       "      <td>179.1</td>\n",
       "      <td>175.6</td>\n",
       "      <td>172.0</td>\n",
       "      <td>167.4</td>\n",
       "      <td>164.5</td>\n",
       "      <td>161.0</td>\n",
       "      <td>157.6</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 82 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "  CME under 5 mortality  1931  1932  1933  1934  1935  1936  1937  1938  1939  \\\n",
       "0           Afghanistan   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   \n",
       "1               Albania   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   \n",
       "2               Algeria   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   \n",
       "3               Andorra   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   \n",
       "4                Angola   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   \n",
       "\n",
       "   ...     2002   2003   2004   2005   2006   2007   2008   2009   2010   2011  \n",
       "0  ...    129.2  125.9  122.7  119.4  116.3  113.4  109.7  106.7  103.9  101.1  \n",
       "1  ...     23.5   22.2   21.0   19.7   18.7   17.8   16.9   15.8   15.0   14.3  \n",
       "2  ...     42.3   40.7   39.0   37.7   36.4   34.9   33.5   32.1   31.3   29.8  \n",
       "3  ...      4.6    4.4    4.3    4.1    4.0    3.9    3.7    3.6    3.5    3.3  \n",
       "4  ...    191.2  187.1  183.3  179.1  175.6  172.0  167.4  164.5  161.0  157.6  \n",
       "\n",
       "[5 rows x 82 columns]"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_cmr = pd.read_csv('data/mortality_rates_under5.csv')\n",
    "df_cmr.info()\n",
    "df_cmr.head()\n",
    "# Good data in later years "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Observations:**\n",
    "* Data present for 260 countries for years starting at year 1931 to 2011\n",
    "* Missing data for years upto 1989. Highest number of non-null entries (195) present for years 1990-2011 \n",
    "\n",
    "**Next Steps:**\n",
    "* Columns upto year 1989 will be dropped due to extreme amount of missing data   \n",
    "* Remove countries with no data present (260-195 = 65 countries) \n",
    "* Final dataset will contain child mortality rates for year 1990-2011 for 195 countries "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 5. Female Literacy Rate "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 262 entries, 0 to 261\n",
      "Data columns (total 38 columns):\n",
      "Adult (15+) literacy rate (%). Female    260 non-null object\n",
      "1975                                     6 non-null float64\n",
      "1976                                     7 non-null float64\n",
      "1977                                     1 non-null float64\n",
      "1978                                     2 non-null float64\n",
      "1979                                     7 non-null float64\n",
      "1980                                     18 non-null float64\n",
      "1981                                     17 non-null float64\n",
      "1982                                     7 non-null float64\n",
      "1983                                     2 non-null float64\n",
      "1984                                     5 non-null float64\n",
      "1985                                     6 non-null float64\n",
      "1986                                     4 non-null float64\n",
      "1987                                     3 non-null float64\n",
      "1988                                     4 non-null float64\n",
      "1989                                     10 non-null float64\n",
      "1990                                     16 non-null float64\n",
      "1991                                     21 non-null float64\n",
      "1992                                     10 non-null float64\n",
      "1993                                     4 non-null float64\n",
      "1994                                     12 non-null float64\n",
      "1995                                     5 non-null float64\n",
      "1996                                     8 non-null float64\n",
      "1997                                     3 non-null float64\n",
      "1998                                     5 non-null float64\n",
      "1999                                     7 non-null float64\n",
      "2000                                     43 non-null float64\n",
      "2001                                     30 non-null float64\n",
      "2002                                     19 non-null float64\n",
      "2003                                     10 non-null float64\n",
      "2004                                     30 non-null float64\n",
      "2005                                     19 non-null float64\n",
      "2006                                     25 non-null float64\n",
      "2007                                     32 non-null float64\n",
      "2008                                     27 non-null float64\n",
      "2009                                     28 non-null float64\n",
      "2010                                     35 non-null float64\n",
      "2011                                     83 non-null float64\n",
      "dtypes: float64(37), object(1)\n",
      "memory usage: 77.9+ KB\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Adult (15+) literacy rate (%). Female</th>\n",
       "      <th>1975</th>\n",
       "      <th>1976</th>\n",
       "      <th>1977</th>\n",
       "      <th>1978</th>\n",
       "      <th>1979</th>\n",
       "      <th>1980</th>\n",
       "      <th>1981</th>\n",
       "      <th>1982</th>\n",
       "      <th>1983</th>\n",
       "      <th>...</th>\n",
       "      <th>2002</th>\n",
       "      <th>2003</th>\n",
       "      <th>2004</th>\n",
       "      <th>2005</th>\n",
       "      <th>2006</th>\n",
       "      <th>2007</th>\n",
       "      <th>2008</th>\n",
       "      <th>2009</th>\n",
       "      <th>2010</th>\n",
       "      <th>2011</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>4.98746</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>13.00000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Albania</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>94.681814</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>95.69148</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Algeria</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>60.075082</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>63.918785</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Andorra</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Angola</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>58.60846</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 38 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "  Adult (15+) literacy rate (%). Female  1975  1976  1977  1978     1979  \\\n",
       "0                           Afghanistan   NaN   NaN   NaN   NaN  4.98746   \n",
       "1                               Albania   NaN   NaN   NaN   NaN      NaN   \n",
       "2                               Algeria   NaN   NaN   NaN   NaN      NaN   \n",
       "3                               Andorra   NaN   NaN   NaN   NaN      NaN   \n",
       "4                                Angola   NaN   NaN   NaN   NaN      NaN   \n",
       "\n",
       "   1980  1981  1982  1983    ...          2002  2003  2004  2005       2006  \\\n",
       "0   NaN   NaN   NaN   NaN    ...           NaN   NaN   NaN   NaN        NaN   \n",
       "1   NaN   NaN   NaN   NaN    ...           NaN   NaN   NaN   NaN        NaN   \n",
       "2   NaN   NaN   NaN   NaN    ...     60.075082   NaN   NaN   NaN  63.918785   \n",
       "3   NaN   NaN   NaN   NaN    ...           NaN   NaN   NaN   NaN        NaN   \n",
       "4   NaN   NaN   NaN   NaN    ...           NaN   NaN   NaN   NaN        NaN   \n",
       "\n",
       "   2007       2008  2009  2010      2011  \n",
       "0   NaN        NaN   NaN   NaN  13.00000  \n",
       "1   NaN  94.681814   NaN   NaN  95.69148  \n",
       "2   NaN        NaN   NaN   NaN       NaN  \n",
       "3   NaN        NaN   NaN   NaN       NaN  \n",
       "4   NaN        NaN   NaN   NaN  58.60846  \n",
       "\n",
       "[5 rows x 38 columns]"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_literacy = pd.read_csv('data/female_literacy_rate.csv')\n",
    "df_literacy.info()\n",
    "df_literacy.head()\n",
    "# Lots of missing values, substantial cleaning required "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Observations:**\n",
    "* Female literacy rate has data for 260 countries for years 1975 - 2011\n",
    "* No year contains data for all 260 countries with year 2011 containing highest number of non-null entries(83)\n",
    "\n",
    "**Next Steps:**\n",
    "* Due to extreme amounts of missing data for all years, female literacy rate will be dropped from the analysis\n",
    "* As a substitute to gauge women literacy, mean years in school for females will be used which has complete data for 175 countries from 1970 - 2009"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "> **Tip**: You should _not_ perform too many operations in each cell. Create cells freely to explore your data. One option that you can take with this project is to do a lot of explorations in an initial notebook. These don't have to be organized, but make sure you use enough comments to understand the purpose of each code cell. Then, after you're done with your analysis, create a duplicate notebook where you will trim the excess and organize your steps so that you have a flowing, cohesive report.\n",
    "\n",
    "> **Tip**: Make sure that you keep your reader informed on the steps that you are taking in your investigation. Follow every code cell, or every set of related code cells, with a markdown cell to describe to the reader what was found in the preceding cell(s). Try to make it so that the reader can then understand what they will be seeing in the following cell(s).\n",
    "\n",
    "## Data Cleaning "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 1. Mean School Years \n",
    "Data for mean school years for females is already complete requiring minimal cleaning "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 175 entries, 0 to 174\n",
      "Data columns (total 41 columns):\n",
      "Row Labels    175 non-null object\n",
      "1970          175 non-null float64\n",
      "1971          175 non-null float64\n",
      "1972          175 non-null float64\n",
      "1973          175 non-null float64\n",
      "1974          175 non-null float64\n",
      "1975          175 non-null float64\n",
      "1976          175 non-null float64\n",
      "1977          175 non-null float64\n",
      "1978          175 non-null float64\n",
      "1979          175 non-null float64\n",
      "1980          175 non-null float64\n",
      "1981          175 non-null float64\n",
      "1982          175 non-null float64\n",
      "1983          175 non-null float64\n",
      "1984          175 non-null float64\n",
      "1985          175 non-null float64\n",
      "1986          175 non-null float64\n",
      "1987          175 non-null float64\n",
      "1988          175 non-null float64\n",
      "1989          175 non-null float64\n",
      "1990          175 non-null float64\n",
      "1991          175 non-null float64\n",
      "1992          175 non-null float64\n",
      "1993          175 non-null float64\n",
      "1994          175 non-null float64\n",
      "1995          175 non-null float64\n",
      "1996          175 non-null float64\n",
      "1997          175 non-null float64\n",
      "1998          175 non-null float64\n",
      "1999          175 non-null float64\n",
      "2000          175 non-null float64\n",
      "2001          175 non-null float64\n",
      "2002          175 non-null float64\n",
      "2003          175 non-null float64\n",
      "2004          175 non-null float64\n",
      "2005          175 non-null float64\n",
      "2006          175 non-null float64\n",
      "2007          175 non-null float64\n",
      "2008          175 non-null float64\n",
      "2009          175 non-null float64\n",
      "dtypes: float64(40), object(1)\n",
      "memory usage: 56.1+ KB\n"
     ]
    }
   ],
   "source": [
    "df_school.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Country</th>\n",
       "      <th>1970</th>\n",
       "      <th>1971</th>\n",
       "      <th>1972</th>\n",
       "      <th>1973</th>\n",
       "      <th>1974</th>\n",
       "      <th>1975</th>\n",
       "      <th>1976</th>\n",
       "      <th>1977</th>\n",
       "      <th>1978</th>\n",
       "      <th>...</th>\n",
       "      <th>2000</th>\n",
       "      <th>2001</th>\n",
       "      <th>2002</th>\n",
       "      <th>2003</th>\n",
       "      <th>2004</th>\n",
       "      <th>2005</th>\n",
       "      <th>2006</th>\n",
       "      <th>2007</th>\n",
       "      <th>2008</th>\n",
       "      <th>2009</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>0.1</td>\n",
       "      <td>0.1</td>\n",
       "      <td>0.1</td>\n",
       "      <td>0.1</td>\n",
       "      <td>0.1</td>\n",
       "      <td>0.1</td>\n",
       "      <td>0.1</td>\n",
       "      <td>0.1</td>\n",
       "      <td>0.2</td>\n",
       "      <td>...</td>\n",
       "      <td>0.5</td>\n",
       "      <td>0.5</td>\n",
       "      <td>0.5</td>\n",
       "      <td>0.6</td>\n",
       "      <td>0.6</td>\n",
       "      <td>0.6</td>\n",
       "      <td>0.7</td>\n",
       "      <td>0.7</td>\n",
       "      <td>0.7</td>\n",
       "      <td>0.8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Albania</td>\n",
       "      <td>5.6</td>\n",
       "      <td>5.7</td>\n",
       "      <td>5.9</td>\n",
       "      <td>6.0</td>\n",
       "      <td>6.2</td>\n",
       "      <td>6.3</td>\n",
       "      <td>6.5</td>\n",
       "      <td>6.6</td>\n",
       "      <td>6.8</td>\n",
       "      <td>...</td>\n",
       "      <td>9.8</td>\n",
       "      <td>9.9</td>\n",
       "      <td>10.0</td>\n",
       "      <td>10.1</td>\n",
       "      <td>10.2</td>\n",
       "      <td>10.3</td>\n",
       "      <td>10.4</td>\n",
       "      <td>10.5</td>\n",
       "      <td>10.6</td>\n",
       "      <td>10.7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Algeria</td>\n",
       "      <td>1.4</td>\n",
       "      <td>1.5</td>\n",
       "      <td>1.6</td>\n",
       "      <td>1.7</td>\n",
       "      <td>1.8</td>\n",
       "      <td>1.9</td>\n",
       "      <td>2.1</td>\n",
       "      <td>2.2</td>\n",
       "      <td>2.3</td>\n",
       "      <td>...</td>\n",
       "      <td>5.8</td>\n",
       "      <td>5.9</td>\n",
       "      <td>6.1</td>\n",
       "      <td>6.2</td>\n",
       "      <td>6.4</td>\n",
       "      <td>6.5</td>\n",
       "      <td>6.7</td>\n",
       "      <td>6.8</td>\n",
       "      <td>6.9</td>\n",
       "      <td>7.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Angola</td>\n",
       "      <td>0.9</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.1</td>\n",
       "      <td>1.1</td>\n",
       "      <td>1.2</td>\n",
       "      <td>1.2</td>\n",
       "      <td>1.3</td>\n",
       "      <td>1.4</td>\n",
       "      <td>...</td>\n",
       "      <td>3.5</td>\n",
       "      <td>3.6</td>\n",
       "      <td>3.7</td>\n",
       "      <td>3.8</td>\n",
       "      <td>3.9</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.1</td>\n",
       "      <td>4.3</td>\n",
       "      <td>4.4</td>\n",
       "      <td>4.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Antigua and Barbuda</td>\n",
       "      <td>8.1</td>\n",
       "      <td>8.3</td>\n",
       "      <td>8.5</td>\n",
       "      <td>8.7</td>\n",
       "      <td>8.8</td>\n",
       "      <td>9.0</td>\n",
       "      <td>9.2</td>\n",
       "      <td>9.4</td>\n",
       "      <td>9.6</td>\n",
       "      <td>...</td>\n",
       "      <td>12.7</td>\n",
       "      <td>12.8</td>\n",
       "      <td>12.9</td>\n",
       "      <td>13.0</td>\n",
       "      <td>13.1</td>\n",
       "      <td>13.2</td>\n",
       "      <td>13.3</td>\n",
       "      <td>13.3</td>\n",
       "      <td>13.4</td>\n",
       "      <td>13.5</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 41 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "               Country  1970  1971  1972  1973  1974  1975  1976  1977  1978  \\\n",
       "0          Afghanistan   0.1   0.1   0.1   0.1   0.1   0.1   0.1   0.1   0.2   \n",
       "1              Albania   5.6   5.7   5.9   6.0   6.2   6.3   6.5   6.6   6.8   \n",
       "2              Algeria   1.4   1.5   1.6   1.7   1.8   1.9   2.1   2.2   2.3   \n",
       "3               Angola   0.9   1.0   1.0   1.1   1.1   1.2   1.2   1.3   1.4   \n",
       "4  Antigua and Barbuda   8.1   8.3   8.5   8.7   8.8   9.0   9.2   9.4   9.6   \n",
       "\n",
       "   ...   2000  2001  2002  2003  2004  2005  2006  2007  2008  2009  \n",
       "0  ...    0.5   0.5   0.5   0.6   0.6   0.6   0.7   0.7   0.7   0.8  \n",
       "1  ...    9.8   9.9  10.0  10.1  10.2  10.3  10.4  10.5  10.6  10.7  \n",
       "2  ...    5.8   5.9   6.1   6.2   6.4   6.5   6.7   6.8   6.9   7.1  \n",
       "3  ...    3.5   3.6   3.7   3.8   3.9   4.0   4.1   4.3   4.4   4.5  \n",
       "4  ...   12.7  12.8  12.9  13.0  13.1  13.2  13.3  13.3  13.4  13.5  \n",
       "\n",
       "[5 rows x 41 columns]"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Raname first column to 'Country'\n",
    "df_school.rename(columns={df_school.columns[0]: 'Country'}, inplace=True)\n",
    "\n",
    "df_school.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [],
   "source": [
    "#plt.plot(df_school['Country'], df_school['1970'])\n",
    "#highestEdu = df_school.nlargest(20, '1970')\n",
    "#highestEdu"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [],
   "source": [
    "#plt.bar(locations, heights, tick_label=labels)\n",
    "#plt.title('Average Quality Rating by pH Levels')\n",
    "#plt.xlabel('pH Levels')\n",
    "#plt.ylabel('Average Quality Rating')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 2. Mean Age at Marriage\n",
    "**Todo:** Due to extreme amount of missing data for most years, drop all years except 2005 "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Unnamed: 0</th>\n",
       "      <th>1616</th>\n",
       "      <th>1666</th>\n",
       "      <th>1685</th>\n",
       "      <th>1710</th>\n",
       "      <th>1716</th>\n",
       "      <th>1735</th>\n",
       "      <th>1760</th>\n",
       "      <th>1766</th>\n",
       "      <th>1775</th>\n",
       "      <th>...</th>\n",
       "      <th>1996</th>\n",
       "      <th>1997</th>\n",
       "      <th>1998</th>\n",
       "      <th>1999</th>\n",
       "      <th>2000</th>\n",
       "      <th>2001</th>\n",
       "      <th>2002</th>\n",
       "      <th>2003</th>\n",
       "      <th>2004</th>\n",
       "      <th>2005</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>17.839683</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Albania</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>23.326509</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Algeria</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>27.6</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>29.600000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Angola</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Argentina</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>23.263962</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 117 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    Unnamed: 0  1616  1666  1685  1710  1716  1735  1760  1766  1775  \\\n",
       "0  Afghanistan   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   \n",
       "1      Albania   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   \n",
       "2      Algeria   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   \n",
       "3       Angola   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   \n",
       "4    Argentina   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   \n",
       "\n",
       "     ...      1996  1997  1998  1999  2000  2001  2002  2003  2004       2005  \n",
       "0    ...       NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN  17.839683  \n",
       "1    ...       NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN  23.326509  \n",
       "2    ...       NaN   NaN  27.6   NaN   NaN   NaN   NaN   NaN   NaN  29.600000  \n",
       "3    ...       NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN        NaN  \n",
       "4    ...       NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN  23.263962  \n",
       "\n",
       "[5 rows x 117 columns]"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_marriage.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Country</th>\n",
       "      <th>1616</th>\n",
       "      <th>1666</th>\n",
       "      <th>1685</th>\n",
       "      <th>1710</th>\n",
       "      <th>1716</th>\n",
       "      <th>1735</th>\n",
       "      <th>1760</th>\n",
       "      <th>1766</th>\n",
       "      <th>1775</th>\n",
       "      <th>...</th>\n",
       "      <th>1996</th>\n",
       "      <th>1997</th>\n",
       "      <th>1998</th>\n",
       "      <th>1999</th>\n",
       "      <th>2000</th>\n",
       "      <th>2001</th>\n",
       "      <th>2002</th>\n",
       "      <th>2003</th>\n",
       "      <th>2004</th>\n",
       "      <th>2005</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>17.839683</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Albania</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>23.326509</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Algeria</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>27.6</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>29.600000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Angola</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Argentina</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>23.263962</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 117 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       Country  1616  1666  1685  1710  1716  1735  1760  1766  1775  \\\n",
       "0  Afghanistan   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   \n",
       "1      Albania   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   \n",
       "2      Algeria   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   \n",
       "3       Angola   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   \n",
       "4    Argentina   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   \n",
       "\n",
       "     ...      1996  1997  1998  1999  2000  2001  2002  2003  2004       2005  \n",
       "0    ...       NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN  17.839683  \n",
       "1    ...       NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN  23.326509  \n",
       "2    ...       NaN   NaN  27.6   NaN   NaN   NaN   NaN   NaN   NaN  29.600000  \n",
       "3    ...       NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN        NaN  \n",
       "4    ...       NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN  23.263962  \n",
       "\n",
       "[5 rows x 117 columns]"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Rename first column to 'Country'\n",
    "df_marriage.rename(columns={df_marriage.columns[0]: 'Country'}, inplace=True)\n",
    "df_marriage.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 185 entries, 0 to 184\n",
      "Data columns (total 2 columns):\n",
      "Country    185 non-null object\n",
      "2005       175 non-null float64\n",
      "dtypes: float64(1), object(1)\n",
      "memory usage: 3.0+ KB\n"
     ]
    }
   ],
   "source": [
    "# Drop all columns except 'Country' and '2005'\n",
    "df_marriage = df_marriage.loc[:, ['Country', '2005']]\n",
    "df_marriage.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The new marriage age dataframe only contains data for year 2005, however, it still contains null values for many countries which must be dropped"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Int64Index: 175 entries, 0 to 184\n",
      "Data columns (total 2 columns):\n",
      "Country    175 non-null object\n",
      "2005       175 non-null float64\n",
      "dtypes: float64(1), object(1)\n",
      "memory usage: 4.1+ KB\n"
     ]
    }
   ],
   "source": [
    "# Drop null values in year 2005\n",
    "df_marriage.dropna(inplace=True)\n",
    "df_marriage.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 3. Female Labour Participation\n",
    "Data for female labour participation is already complete requiring minimal cleaning "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 189 entries, 0 to 188\n",
      "Data columns (total 29 columns):\n",
      "Female 15-64 labour to population (%)    189 non-null object\n",
      "1980                                     189 non-null float64\n",
      "1981                                     189 non-null float64\n",
      "1982                                     189 non-null float64\n",
      "1983                                     189 non-null float64\n",
      "1984                                     189 non-null float64\n",
      "1985                                     189 non-null float64\n",
      "1986                                     189 non-null float64\n",
      "1987                                     189 non-null float64\n",
      "1988                                     189 non-null float64\n",
      "1989                                     189 non-null float64\n",
      "1990                                     189 non-null float64\n",
      "1991                                     189 non-null float64\n",
      "1992                                     189 non-null float64\n",
      "1993                                     189 non-null float64\n",
      "1994                                     189 non-null float64\n",
      "1995                                     189 non-null float64\n",
      "1996                                     189 non-null float64\n",
      "1997                                     189 non-null float64\n",
      "1998                                     189 non-null float64\n",
      "1999                                     189 non-null float64\n",
      "2000                                     189 non-null float64\n",
      "2001                                     189 non-null float64\n",
      "2002                                     189 non-null float64\n",
      "2003                                     189 non-null float64\n",
      "2004                                     189 non-null float64\n",
      "2005                                     189 non-null float64\n",
      "2006                                     189 non-null float64\n",
      "2007                                     189 non-null float64\n",
      "dtypes: float64(28), object(1)\n",
      "memory usage: 42.9+ KB\n"
     ]
    }
   ],
   "source": [
    "df_labor.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Country</th>\n",
       "      <th>1980</th>\n",
       "      <th>1981</th>\n",
       "      <th>1982</th>\n",
       "      <th>1983</th>\n",
       "      <th>1984</th>\n",
       "      <th>1985</th>\n",
       "      <th>1986</th>\n",
       "      <th>1987</th>\n",
       "      <th>1988</th>\n",
       "      <th>...</th>\n",
       "      <th>1998</th>\n",
       "      <th>1999</th>\n",
       "      <th>2000</th>\n",
       "      <th>2001</th>\n",
       "      <th>2002</th>\n",
       "      <th>2003</th>\n",
       "      <th>2004</th>\n",
       "      <th>2005</th>\n",
       "      <th>2006</th>\n",
       "      <th>2007</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>31.100000</td>\n",
       "      <td>30.900000</td>\n",
       "      <td>30.700001</td>\n",
       "      <td>30.500000</td>\n",
       "      <td>30.400000</td>\n",
       "      <td>30.200001</td>\n",
       "      <td>30.000000</td>\n",
       "      <td>29.900000</td>\n",
       "      <td>29.799999</td>\n",
       "      <td>...</td>\n",
       "      <td>28.000000</td>\n",
       "      <td>28.000000</td>\n",
       "      <td>28.000000</td>\n",
       "      <td>28.200001</td>\n",
       "      <td>28.400000</td>\n",
       "      <td>28.600000</td>\n",
       "      <td>28.900000</td>\n",
       "      <td>29.200001</td>\n",
       "      <td>29.600000</td>\n",
       "      <td>29.500000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Albania</td>\n",
       "      <td>73.699997</td>\n",
       "      <td>73.099998</td>\n",
       "      <td>72.800003</td>\n",
       "      <td>72.199997</td>\n",
       "      <td>71.699997</td>\n",
       "      <td>71.800003</td>\n",
       "      <td>71.400002</td>\n",
       "      <td>72.199997</td>\n",
       "      <td>73.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>55.400002</td>\n",
       "      <td>55.599998</td>\n",
       "      <td>55.700001</td>\n",
       "      <td>55.700001</td>\n",
       "      <td>55.700001</td>\n",
       "      <td>55.700001</td>\n",
       "      <td>55.700001</td>\n",
       "      <td>55.599998</td>\n",
       "      <td>55.599998</td>\n",
       "      <td>56.099998</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Algeria</td>\n",
       "      <td>19.799999</td>\n",
       "      <td>19.900000</td>\n",
       "      <td>20.100000</td>\n",
       "      <td>20.100000</td>\n",
       "      <td>20.299999</td>\n",
       "      <td>20.400000</td>\n",
       "      <td>21.000000</td>\n",
       "      <td>21.700001</td>\n",
       "      <td>22.400000</td>\n",
       "      <td>...</td>\n",
       "      <td>30.400000</td>\n",
       "      <td>31.299999</td>\n",
       "      <td>32.099998</td>\n",
       "      <td>33.000000</td>\n",
       "      <td>33.799999</td>\n",
       "      <td>34.700001</td>\n",
       "      <td>35.500000</td>\n",
       "      <td>36.200001</td>\n",
       "      <td>36.900002</td>\n",
       "      <td>38.099998</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Angola</td>\n",
       "      <td>74.300003</td>\n",
       "      <td>74.300003</td>\n",
       "      <td>74.500000</td>\n",
       "      <td>74.599998</td>\n",
       "      <td>74.800003</td>\n",
       "      <td>74.900002</td>\n",
       "      <td>75.000000</td>\n",
       "      <td>75.199997</td>\n",
       "      <td>76.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>74.699997</td>\n",
       "      <td>75.099998</td>\n",
       "      <td>74.699997</td>\n",
       "      <td>74.599998</td>\n",
       "      <td>75.000000</td>\n",
       "      <td>74.900002</td>\n",
       "      <td>75.199997</td>\n",
       "      <td>75.500000</td>\n",
       "      <td>76.199997</td>\n",
       "      <td>76.400002</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Argentina</td>\n",
       "      <td>32.799999</td>\n",
       "      <td>32.099998</td>\n",
       "      <td>31.600000</td>\n",
       "      <td>31.299999</td>\n",
       "      <td>31.600000</td>\n",
       "      <td>32.099998</td>\n",
       "      <td>32.200001</td>\n",
       "      <td>32.400002</td>\n",
       "      <td>32.900002</td>\n",
       "      <td>...</td>\n",
       "      <td>49.900002</td>\n",
       "      <td>50.799999</td>\n",
       "      <td>51.700001</td>\n",
       "      <td>52.599998</td>\n",
       "      <td>53.500000</td>\n",
       "      <td>54.400002</td>\n",
       "      <td>55.299999</td>\n",
       "      <td>56.200001</td>\n",
       "      <td>57.099998</td>\n",
       "      <td>57.099998</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 29 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       Country       1980       1981       1982       1983       1984  \\\n",
       "0  Afghanistan  31.100000  30.900000  30.700001  30.500000  30.400000   \n",
       "1      Albania  73.699997  73.099998  72.800003  72.199997  71.699997   \n",
       "2      Algeria  19.799999  19.900000  20.100000  20.100000  20.299999   \n",
       "3       Angola  74.300003  74.300003  74.500000  74.599998  74.800003   \n",
       "4    Argentina  32.799999  32.099998  31.600000  31.299999  31.600000   \n",
       "\n",
       "        1985       1986       1987       1988    ...           1998  \\\n",
       "0  30.200001  30.000000  29.900000  29.799999    ...      28.000000   \n",
       "1  71.800003  71.400002  72.199997  73.000000    ...      55.400002   \n",
       "2  20.400000  21.000000  21.700001  22.400000    ...      30.400000   \n",
       "3  74.900002  75.000000  75.199997  76.000000    ...      74.699997   \n",
       "4  32.099998  32.200001  32.400002  32.900002    ...      49.900002   \n",
       "\n",
       "        1999       2000       2001       2002       2003       2004  \\\n",
       "0  28.000000  28.000000  28.200001  28.400000  28.600000  28.900000   \n",
       "1  55.599998  55.700001  55.700001  55.700001  55.700001  55.700001   \n",
       "2  31.299999  32.099998  33.000000  33.799999  34.700001  35.500000   \n",
       "3  75.099998  74.699997  74.599998  75.000000  74.900002  75.199997   \n",
       "4  50.799999  51.700001  52.599998  53.500000  54.400002  55.299999   \n",
       "\n",
       "        2005       2006       2007  \n",
       "0  29.200001  29.600000  29.500000  \n",
       "1  55.599998  55.599998  56.099998  \n",
       "2  36.200001  36.900002  38.099998  \n",
       "3  75.500000  76.199997  76.400002  \n",
       "4  56.200001  57.099998  57.099998  \n",
       "\n",
       "[5 rows x 29 columns]"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Raname first column to 'Country'\n",
    "df_labor.rename(columns={df_labor.columns[0]: 'Country'}, inplace=True)\n",
    "df_labor.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 4. Child Mortality Rates\n",
    "**Todo:** \n",
    "* Due to extreme amount of missing data in early years, drop all years upto and including 1989\n",
    "* Clean up column names and drop any null values for years 1990-2011"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>CME under 5 mortality</th>\n",
       "      <th>1931</th>\n",
       "      <th>1932</th>\n",
       "      <th>1933</th>\n",
       "      <th>1934</th>\n",
       "      <th>1935</th>\n",
       "      <th>1936</th>\n",
       "      <th>1937</th>\n",
       "      <th>1938</th>\n",
       "      <th>1939</th>\n",
       "      <th>...</th>\n",
       "      <th>2002</th>\n",
       "      <th>2003</th>\n",
       "      <th>2004</th>\n",
       "      <th>2005</th>\n",
       "      <th>2006</th>\n",
       "      <th>2007</th>\n",
       "      <th>2008</th>\n",
       "      <th>2009</th>\n",
       "      <th>2010</th>\n",
       "      <th>2011</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>129.2</td>\n",
       "      <td>125.9</td>\n",
       "      <td>122.7</td>\n",
       "      <td>119.4</td>\n",
       "      <td>116.3</td>\n",
       "      <td>113.4</td>\n",
       "      <td>109.7</td>\n",
       "      <td>106.7</td>\n",
       "      <td>103.9</td>\n",
       "      <td>101.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Albania</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>23.5</td>\n",
       "      <td>22.2</td>\n",
       "      <td>21.0</td>\n",
       "      <td>19.7</td>\n",
       "      <td>18.7</td>\n",
       "      <td>17.8</td>\n",
       "      <td>16.9</td>\n",
       "      <td>15.8</td>\n",
       "      <td>15.0</td>\n",
       "      <td>14.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Algeria</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>42.3</td>\n",
       "      <td>40.7</td>\n",
       "      <td>39.0</td>\n",
       "      <td>37.7</td>\n",
       "      <td>36.4</td>\n",
       "      <td>34.9</td>\n",
       "      <td>33.5</td>\n",
       "      <td>32.1</td>\n",
       "      <td>31.3</td>\n",
       "      <td>29.8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Andorra</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>4.6</td>\n",
       "      <td>4.4</td>\n",
       "      <td>4.3</td>\n",
       "      <td>4.1</td>\n",
       "      <td>4.0</td>\n",
       "      <td>3.9</td>\n",
       "      <td>3.7</td>\n",
       "      <td>3.6</td>\n",
       "      <td>3.5</td>\n",
       "      <td>3.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Angola</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>191.2</td>\n",
       "      <td>187.1</td>\n",
       "      <td>183.3</td>\n",
       "      <td>179.1</td>\n",
       "      <td>175.6</td>\n",
       "      <td>172.0</td>\n",
       "      <td>167.4</td>\n",
       "      <td>164.5</td>\n",
       "      <td>161.0</td>\n",
       "      <td>157.6</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 82 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "  CME under 5 mortality  1931  1932  1933  1934  1935  1936  1937  1938  1939  \\\n",
       "0           Afghanistan   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   \n",
       "1               Albania   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   \n",
       "2               Algeria   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   \n",
       "3               Andorra   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   \n",
       "4                Angola   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   \n",
       "\n",
       "   ...     2002   2003   2004   2005   2006   2007   2008   2009   2010   2011  \n",
       "0  ...    129.2  125.9  122.7  119.4  116.3  113.4  109.7  106.7  103.9  101.1  \n",
       "1  ...     23.5   22.2   21.0   19.7   18.7   17.8   16.9   15.8   15.0   14.3  \n",
       "2  ...     42.3   40.7   39.0   37.7   36.4   34.9   33.5   32.1   31.3   29.8  \n",
       "3  ...      4.6    4.4    4.3    4.1    4.0    3.9    3.7    3.6    3.5    3.3  \n",
       "4  ...    191.2  187.1  183.3  179.1  175.6  172.0  167.4  164.5  161.0  157.6  \n",
       "\n",
       "[5 rows x 82 columns]"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_cmr.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "To keep columns for years 1990-2011, need to find column index of year '1990'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "60"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Find column index of 1990 \n",
    "index_1990 = df_cmr.columns.get_loc('1990')\n",
    "index_1990"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Drop all columns except 'Country' and 1990-2011\n",
    "df_cmr.drop(df_cmr.iloc[:, 1:60], inplace=True, axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 260 entries, 0 to 259\n",
      "Data columns (total 23 columns):\n",
      "Country    260 non-null object\n",
      "1990       195 non-null float64\n",
      "1991       195 non-null float64\n",
      "1992       195 non-null float64\n",
      "1993       195 non-null float64\n",
      "1994       195 non-null float64\n",
      "1995       195 non-null float64\n",
      "1996       195 non-null float64\n",
      "1997       195 non-null float64\n",
      "1998       195 non-null float64\n",
      "1999       195 non-null float64\n",
      "2000       195 non-null float64\n",
      "2001       195 non-null float64\n",
      "2002       195 non-null float64\n",
      "2003       195 non-null float64\n",
      "2004       195 non-null float64\n",
      "2005       195 non-null float64\n",
      "2006       195 non-null float64\n",
      "2007       195 non-null float64\n",
      "2008       195 non-null float64\n",
      "2009       195 non-null float64\n",
      "2010       195 non-null float64\n",
      "2011       195 non-null float64\n",
      "dtypes: float64(22), object(1)\n",
      "memory usage: 46.8+ KB\n"
     ]
    }
   ],
   "source": [
    "# Rename first column to 'Country'\n",
    "df_cmr.rename(columns={df_cmr.columns[0]: 'Country'}, inplace=True)\n",
    "df_cmr.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The new Child Mortality Rate dataframe only contains data for years of interest, however, it still contains null values for many countries which must be dropped"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Int64Index: 195 entries, 0 to 194\n",
      "Data columns (total 23 columns):\n",
      "Country    195 non-null object\n",
      "1990       195 non-null float64\n",
      "1991       195 non-null float64\n",
      "1992       195 non-null float64\n",
      "1993       195 non-null float64\n",
      "1994       195 non-null float64\n",
      "1995       195 non-null float64\n",
      "1996       195 non-null float64\n",
      "1997       195 non-null float64\n",
      "1998       195 non-null float64\n",
      "1999       195 non-null float64\n",
      "2000       195 non-null float64\n",
      "2001       195 non-null float64\n",
      "2002       195 non-null float64\n",
      "2003       195 non-null float64\n",
      "2004       195 non-null float64\n",
      "2005       195 non-null float64\n",
      "2006       195 non-null float64\n",
      "2007       195 non-null float64\n",
      "2008       195 non-null float64\n",
      "2009       195 non-null float64\n",
      "2010       195 non-null float64\n",
      "2011       195 non-null float64\n",
      "dtypes: float64(22), object(1)\n",
      "memory usage: 36.6+ KB\n"
     ]
    }
   ],
   "source": [
    "# Drop null values for all remaining years \n",
    "df_cmr.dropna(inplace=True)\n",
    "df_cmr.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Cleaned Datasets\n",
    "1. **Mean Years in School**: Data for 175 countries for years 1970-2009\n",
    "2. **Mean Age at Marriage**: Data for 175 countries for year 2005\n",
    "3. **Female Labour Participation**: Data for 189 countries for years 1980-2007\n",
    "4. **Child Mortality Rates**: Data for 195 countries for years 1990-2011\n",
    "\n",
    "The above datasets are sufficient to perform analysis on individual indicators and compare how certain countries have grown in specific factors compared to other regions in world. However, to perform comparative analysis between indicators, further manipulation is required by creating a new dataframe for every year of interest. \n",
    "\n",
    "**Merged Dataset 1**: All four cleaned datasets will be joined for year 2005 which has complete data for each indicator. \n",
    "\n",
    "**Merged Dataset 2**: All datasets except mean age at marriage will be joined for year 1990 which has complete data for the remainings indicators\n",
    "\n",
    "**The purpose behind creating two merged datasets is to perform comparative analysis for two different years (1990 and 2005) which allows for deeper insights than checking correlations between indicators for only one year**"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Year 2005 Merged  \n",
    "Combined dataset for year 2005"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Country</th>\n",
       "      <th>2005_x</th>\n",
       "      <th>2005_y</th>\n",
       "      <th>2005_x</th>\n",
       "      <th>2005_y</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>0.6</td>\n",
       "      <td>17.839683</td>\n",
       "      <td>29.200001</td>\n",
       "      <td>119.4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Albania</td>\n",
       "      <td>10.3</td>\n",
       "      <td>23.326509</td>\n",
       "      <td>55.599998</td>\n",
       "      <td>19.7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Algeria</td>\n",
       "      <td>6.5</td>\n",
       "      <td>29.600000</td>\n",
       "      <td>36.200001</td>\n",
       "      <td>37.7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Argentina</td>\n",
       "      <td>11.1</td>\n",
       "      <td>23.263962</td>\n",
       "      <td>56.200001</td>\n",
       "      <td>17.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Armenia</td>\n",
       "      <td>11.2</td>\n",
       "      <td>22.986034</td>\n",
       "      <td>64.599998</td>\n",
       "      <td>23.2</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       Country  2005_x     2005_y     2005_x  2005_y\n",
       "0  Afghanistan     0.6  17.839683  29.200001   119.4\n",
       "1      Albania    10.3  23.326509  55.599998    19.7\n",
       "2      Algeria     6.5  29.600000  36.200001    37.7\n",
       "3    Argentina    11.1  23.263962  56.200001    17.2\n",
       "4      Armenia    11.2  22.986034  64.599998    23.2"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Merged Dataset 1: Using reduce to merge multiple dataframes\n",
    "from functools import reduce\n",
    "join_cols = [\"Country\", \"2005\"]\n",
    "dfs = [df_school.loc[:, join_cols], df_marriage.loc[:, join_cols], \n",
    "            df_labor.loc[:, join_cols], df_cmr.loc[:, join_cols]]\n",
    "\n",
    "# Merge\n",
    "df_2005 = reduce(lambda left,right: pd.merge(left,right,on='Country'), dfs)\n",
    "df_2005.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Country</th>\n",
       "      <th>school_years</th>\n",
       "      <th>marriage_age</th>\n",
       "      <th>labor_participation</th>\n",
       "      <th>child_mortality</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>0.6</td>\n",
       "      <td>17.839683</td>\n",
       "      <td>29.200001</td>\n",
       "      <td>119.4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Albania</td>\n",
       "      <td>10.3</td>\n",
       "      <td>23.326509</td>\n",
       "      <td>55.599998</td>\n",
       "      <td>19.7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Algeria</td>\n",
       "      <td>6.5</td>\n",
       "      <td>29.600000</td>\n",
       "      <td>36.200001</td>\n",
       "      <td>37.7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Argentina</td>\n",
       "      <td>11.1</td>\n",
       "      <td>23.263962</td>\n",
       "      <td>56.200001</td>\n",
       "      <td>17.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Armenia</td>\n",
       "      <td>11.2</td>\n",
       "      <td>22.986034</td>\n",
       "      <td>64.599998</td>\n",
       "      <td>23.2</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       Country  school_years  marriage_age  labor_participation  \\\n",
       "0  Afghanistan           0.6     17.839683            29.200001   \n",
       "1      Albania          10.3     23.326509            55.599998   \n",
       "2      Algeria           6.5     29.600000            36.200001   \n",
       "3    Argentina          11.1     23.263962            56.200001   \n",
       "4      Armenia          11.2     22.986034            64.599998   \n",
       "\n",
       "   child_mortality  \n",
       "0            119.4  \n",
       "1             19.7  \n",
       "2             37.7  \n",
       "3             17.2  \n",
       "4             23.2  "
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Rename columns \n",
    "col_names = [\"Country\", \"school_years\", \"marriage_age\", \"labor_participation\", \"child_mortality\"]\n",
    "df_2005.columns = col_names\n",
    "df_2005.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Year 1990 Merged  \n",
    "Combined dataset for year 1990 for all indicators excluding mean age at marriage"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Country</th>\n",
       "      <th>1990_x</th>\n",
       "      <th>1990_y</th>\n",
       "      <th>1990</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>0.3</td>\n",
       "      <td>29.400000</td>\n",
       "      <td>192.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Albania</td>\n",
       "      <td>8.6</td>\n",
       "      <td>73.599998</td>\n",
       "      <td>41.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Algeria</td>\n",
       "      <td>4.1</td>\n",
       "      <td>23.799999</td>\n",
       "      <td>65.6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Angola</td>\n",
       "      <td>2.4</td>\n",
       "      <td>76.000000</td>\n",
       "      <td>243.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Argentina</td>\n",
       "      <td>9.4</td>\n",
       "      <td>33.700001</td>\n",
       "      <td>27.6</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       Country  1990_x     1990_y   1990\n",
       "0  Afghanistan     0.3  29.400000  192.0\n",
       "1      Albania     8.6  73.599998   41.2\n",
       "2      Algeria     4.1  23.799999   65.6\n",
       "3       Angola     2.4  76.000000  243.2\n",
       "4    Argentina     9.4  33.700001   27.6"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Merged Dataset 1: Using reduce to merge multiple dataframes\n",
    "from functools import reduce\n",
    "join_cols = [\"Country\", \"1990\"]\n",
    "dfs = [df_school.loc[:, join_cols], df_labor.loc[:, join_cols], df_cmr.loc[:, join_cols]]\n",
    "\n",
    "# Merge\n",
    "df_1990 = reduce(lambda left,right: pd.merge(left,right,on='Country'), dfs)\n",
    "df_1990.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Country</th>\n",
       "      <th>school_years</th>\n",
       "      <th>labor_participation</th>\n",
       "      <th>child_mortality</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>0.3</td>\n",
       "      <td>29.400000</td>\n",
       "      <td>192.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Albania</td>\n",
       "      <td>8.6</td>\n",
       "      <td>73.599998</td>\n",
       "      <td>41.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Algeria</td>\n",
       "      <td>4.1</td>\n",
       "      <td>23.799999</td>\n",
       "      <td>65.6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Angola</td>\n",
       "      <td>2.4</td>\n",
       "      <td>76.000000</td>\n",
       "      <td>243.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Argentina</td>\n",
       "      <td>9.4</td>\n",
       "      <td>33.700001</td>\n",
       "      <td>27.6</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       Country  school_years  labor_participation  child_mortality\n",
       "0  Afghanistan           0.3            29.400000            192.0\n",
       "1      Albania           8.6            73.599998             41.2\n",
       "2      Algeria           4.1            23.799999             65.6\n",
       "3       Angola           2.4            76.000000            243.2\n",
       "4    Argentina           9.4            33.700001             27.6"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Rename columns \n",
    "col_names = [\"Country\", \"school_years\", \"labor_participation\", \"child_mortality\"]\n",
    "df_1990.columns = col_names\n",
    "df_1990.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<a id='eda'></a>\n",
    "# Exploratory Data Analysis\n",
    "\n",
    "With completed data wrangling \n",
    "> **Tip**: Now that you've trimmed and cleaned your data, you're ready to move on to exploration. Compute statistics and create visualizations with the goal of addressing the research questions that you posed in the Introduction section. It is recommended that you be systematic with your approach. Look at one variable at a time, and then follow it up by looking at relationships between variables.\n",
    "\n",
    "## 1. Individual Indicator Analysis\n",
    "This analysis focuses on first <a href=\"#questions\">Research Question</a> which compares how each metric has changed in different regions around world."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 1.1 Mean Years in School "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                 Country  1970\n",
      "165        United States  11.8\n",
      "26                Canada   9.6\n",
      "41            Czech Rep.   9.4\n",
      "7              Australia   9.3\n",
      "76                 Japan   9.3\n",
      "164       United Kingdom   8.8\n",
      "42               Denmark   8.7\n",
      "122               Poland   8.7\n",
      "162              Ukraine   8.7\n",
      "147               Sweden   8.5\n",
      "57               Georgia   8.4\n",
      "73                Israel   8.3\n",
      "85                Latvia   8.3\n",
      "4    Antigua and Barbuda   8.1\n",
      "13               Belarus   8.1\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "(array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14]),\n",
       " <a list of 15 Text xticklabel objects>)"
      ]
     },
     "execution_count": 54,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x1a1e6a3470>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#plt.plot(df_school['Country'], df_school['1970'])\n",
    "highestEdu = df_school.loc[:,['Country', '1970']].nlargest(15, '1970')\n",
    "print(highestEdu)\n",
    "\n",
    "highestEdu.plot(kind='bar', tick_label=highestEdu['Country'])\n",
    "#plt.bar(highestEdu['Country'], highestEdu['1970'])\n",
    "#rotation='vertical'\n",
    "plt.xticks(rotation='vertical')\n",
    "#plt.title('Average Quality Rating by pH Levels')\n",
    "#plt.xlabel('pH Levels')\n",
    "#plt.ylabel('Average Quality Rating')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#plt.bar(locations, heights, tick_label=labels)\n",
    "#plt.title('Average Quality Rating by pH Levels')\n",
    "#plt.xlabel('pH Levels')\n",
    "#plt.ylabel('Average Quality Rating')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Use this, and more code cells, to explore your data. Don't forget to add\n",
    "#   Markdown cells to document your observations and findings.\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Research Question 2  (Replace this header name!)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Continue to explore the data to address your additional research\n",
    "#   questions. Add more headers as needed if you have more questions to\n",
    "#   investigate.\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<a id='conclusions'></a>\n",
    "## Conclusions\n",
    "\n",
    "> **Tip**: Finally, summarize your findings and the results that have been performed. Make sure that you are clear with regards to the limitations of your exploration. If you haven't done any statistical tests, do not imply any statistical conclusions. And make sure you avoid implying causation from correlation!\n",
    "\n",
    "> **Tip**: Once you are satisfied with your work, you should save a copy of the report in HTML or PDF form via the **File** > **Download as** submenu. Before exporting your report, check over it to make sure that the flow of the report is complete. You should probably remove all of the \"Tip\" quotes like this one so that the presentation is as tidy as possible. Congratulations!"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python [default]",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
